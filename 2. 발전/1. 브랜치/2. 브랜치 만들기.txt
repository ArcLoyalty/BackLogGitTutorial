브랜치 만들기

	Git 에서는 작업에 따라 자유롭게 브랜치를 만들 수 있습니다. 
	그러나 이것을 효과적으로 관리하려면, 먼저 함께 작업할 팀원들과 어떠한 방식으로 브랜치를 만들고 통합할 것인지 미리 정해두는 것이 좋다. 
	예를 들어 새로운 브랜치를 만들 때에 브랜치 이름은 어떤 규칙으로 지을 것인지 또는 어떤 상황에서 브랜치를 만들지, 어느 시점에 통합할 것인지 등등 규칙은 정하기 나름이다.

	자, 그럼 이제부터 우리가 만들 수 있는 브랜치에는 어떤 종류가 있는지 살펴보도록 한다.


	통합 브랜치(Integration Branch)

		통합 브랜치란 언제든지 배포할 수 있는 버전을 만들 수 있어야 하는 브랜치이다. 
		그렇기 때문에 늘 안정적인 상태를 유지하는 것이 중요하다. 
		'안정적인 상태'란 현재 작업 중인 소스코드가 모바일에서 동작하는 어플리케이션을 개발하기 위한 것이라면, '그 어플리케이션의 모든 기능이 정상적으로 동작하는 상태'를 의미한다.

		만약 이 어플리케이션에 어떤 문제가 발견되어 그 문제(버그)를 수정한다던지 새로운 기능을 추가해야 한다던지 해야할 때, 바로 '토픽 브랜치(Topic branch)'를 만들 수 있다. 
		처음에는 보통 통합 브랜치에서 토픽 브랜치를 만들어 낸다.

		일반적으로 저장소를 처음 만들었을 때에 생기는 'master' 브랜치를 통합 브랜치로 사용한다.

	토픽 브랜치(Topic Branch)

		토픽 브랜치란, 기능 추가나 버그 수정과 같은 단위 작업을 위한 브랜치이다. 
		여러 개의 작업을 동시에 진행할 때에는, 그 수만큼 토픽 브랜치를 생성할 수 있다.

		토픽 브랜치는 보통 통합 브랜치로부터 만들어 내며, 토픽 브랜치에서 특정 작업이 완료되면 다시 통합 브랜치에 병합하는 방식으로 진행된다. 
		이러한 토픽 브랜치는 '피처 브랜치(Feature branch)' 라고 부르기도 한다.

		아래를 보자.

			(통합 브런치)	v1.0	v1.1(문제 발생)	v1.2(해결)

			(토픽 브런치)		토픽 브런치